apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'maven-publish'
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
webAppDirName = 'src/main/webapp'

compileJava.dependsOn clean

sourceCompatibility = 1.7

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}
    
checkstyleMain {
    ignoreFailures = false
    reports {
        include ( '**/*.java')
        xml {
           destination = new File(rootDir, "reports/checkstyle/${project.name}.xml" )
        }
    }
    configFile = new File(rootDir, 'checkstyle.xml')
}

checkstyleTest {
	ignoreFailures = false
	reports {
		include ( '**/*.java')
		xml {
			destination = new File(rootDir, "reports/checkstyle/${project.name}_test.xml" )
		}
	}
	configFile = new File(rootDir, 'checkstyle.xml')
}

findbugsMain {
	ignoreFailures = true
	reports {
        include ( '**/*.java')
        xml {
           destination = new File(rootDir, "reports/findbugs/${project.name}.xml" )
        }
    }
	effort = "max"
	reportLevel = "high"
	omitVisitors = ["FindNonShortCircuit"]
}

findbugsTest {
	ignoreFailures = true
	reports {
        include ( '**/*.java')
        xml {
           destination = new File(rootDir, "reports/findbugs/${project.name}_test.xml" )
        }
    }
	effort = "max"
	reportLevel = "high"
	omitVisitors = ["FindNonShortCircuit"]
}

pmdMain {
	ignoreFailures = true
	reports {
        include ( '**/*.java')
        xml {
           destination = new File(rootDir, "reports/pmd/${project.name}.xml" )
        }
    }
}

pmdTest {
	ignoreFailures = true
	reports {
        include ( '**/*.java')
        xml {
           destination = new File(rootDir, "reports/pmd/${project.name}_test.xml" )
        }
    }
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    maven{ url "http://10.1.228.199:18081/nexus/content/groups/public/"  }
}

sourceSets {
    main {
        java { srcDirs = ['src/main/java']}
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

ext {
	moduleName="ipaas-me";
	moduleVersion="0.1-SNAPSHOT"
    publishUserName = "devadm"
    publishUserPassword = "Devadm@1212"
	publishURL="http://10.1.228.199:18081/nexus/content/repositories/snapshots/"
	builtBy="gradle 2.1" 
} 

group = 'com.ai'

dependencies{
//	compile 'com.ai:ipaas-common:0.1-SNAPSHOT'
	compile "org.apache.logging.log4j:log4j-core:2.2"
	compile "org.apache.logging.log4j:log4j-slf4j-impl:2.2"
	compile "org.apache.logging.log4j:log4j-1.2-api:2.2"
	compile 'com.google.code.gson:gson:2.3.1'

		
	compile "org.springframework:spring-core:4.1.6.RELEASE"
	compile "org.springframework:spring-context:4.1.6.RELEASE"
	compile "org.springframework:spring-web:4.1.6.RELEASE"
	compile "org.springframework:spring-webmvc:4.1.6.RELEASE"
	
	compile "org.apache.commons:commons-dbcp2:2.1"
	
	compile "javax.servlet:javax.servlet-api:3.1.0"
	compile "javax.servlet.jsp:javax.servlet.jsp-api:2.3.1"
	
    testCompile(
		"org.springframework:spring-test:4.1.6.RELEASE",
		"junit:junit:4.11"
	)
}

war {
	baseName = "iPaas-me"
}

jar {
	baseName moduleName
	version moduleVersion
	manifest {
		attributes 'packageName': moduleName, 'Built-By': builtBy,'create-date': new Date().format('yyyy-MM-dd HH:mm:ss')
	}
}


eclipse {
	wtp {
		facet {
			facet name: 'java', version: '1.7'
			facet name: 'jst.web', version: '3.0'
			facet name: 'wst.jsdt.web', version: '1.0'
		}
	}
}

